//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebApplication1.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Product", Namespace="http://schemas.datacontract.org/2004/07/MyRESTService")]
    [System.SerializableAttribute()]
    public partial class Product : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DirectorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FilmNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IMDBLinkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LeadingActorsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MovieIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OscarsWonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ReleaseYearField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Director {
            get {
                return this.DirectorField;
            }
            set {
                if ((object.ReferenceEquals(this.DirectorField, value) != true)) {
                    this.DirectorField = value;
                    this.RaisePropertyChanged("Director");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FilmName {
            get {
                return this.FilmNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FilmNameField, value) != true)) {
                    this.FilmNameField = value;
                    this.RaisePropertyChanged("FilmName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IMDBLink {
            get {
                return this.IMDBLinkField;
            }
            set {
                if ((object.ReferenceEquals(this.IMDBLinkField, value) != true)) {
                    this.IMDBLinkField = value;
                    this.RaisePropertyChanged("IMDBLink");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LeadingActors {
            get {
                return this.LeadingActorsField;
            }
            set {
                if ((object.ReferenceEquals(this.LeadingActorsField, value) != true)) {
                    this.LeadingActorsField = value;
                    this.RaisePropertyChanged("LeadingActors");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MovieId {
            get {
                return this.MovieIdField;
            }
            set {
                if ((this.MovieIdField.Equals(value) != true)) {
                    this.MovieIdField = value;
                    this.RaisePropertyChanged("MovieId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OscarsWon {
            get {
                return this.OscarsWonField;
            }
            set {
                if ((this.OscarsWonField.Equals(value) != true)) {
                    this.OscarsWonField = value;
                    this.RaisePropertyChanged("OscarsWon");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReleaseYear {
            get {
                return this.ReleaseYearField;
            }
            set {
                if ((this.ReleaseYearField.Equals(value) != true)) {
                    this.ReleaseYearField = value;
                    this.RaisePropertyChanged("ReleaseYear");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IProductRESTService")]
    public interface IProductRESTService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductRESTService/GetProductList", ReplyAction="http://tempuri.org/IProductRESTService/GetProductListResponse")]
        WebApplication1.ServiceReference1.Product[] GetProductList(string category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductRESTService/GetProductList", ReplyAction="http://tempuri.org/IProductRESTService/GetProductListResponse")]
        System.Threading.Tasks.Task<WebApplication1.ServiceReference1.Product[]> GetProductListAsync(string category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductRESTService/AddScores", ReplyAction="http://tempuri.org/IProductRESTService/AddScoresResponse")]
        void AddScores(string score, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductRESTService/AddScores", ReplyAction="http://tempuri.org/IProductRESTService/AddScoresResponse")]
        System.Threading.Tasks.Task AddScoresAsync(string score, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductRESTService/CreateUser", ReplyAction="http://tempuri.org/IProductRESTService/CreateUserResponse")]
        bool CreateUser(string name, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductRESTService/CreateUser", ReplyAction="http://tempuri.org/IProductRESTService/CreateUserResponse")]
        System.Threading.Tasks.Task<bool> CreateUserAsync(string name, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductRESTService/CheckUser", ReplyAction="http://tempuri.org/IProductRESTService/CheckUserResponse")]
        int CheckUser(string name, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductRESTService/CheckUser", ReplyAction="http://tempuri.org/IProductRESTService/CheckUserResponse")]
        System.Threading.Tasks.Task<int> CheckUserAsync(string name, string password);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IProductRESTServiceChannel : WebApplication1.ServiceReference1.IProductRESTService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProductRESTServiceClient : System.ServiceModel.ClientBase<WebApplication1.ServiceReference1.IProductRESTService>, WebApplication1.ServiceReference1.IProductRESTService {
        
        public ProductRESTServiceClient() {
        }
        
        public ProductRESTServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ProductRESTServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProductRESTServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProductRESTServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public WebApplication1.ServiceReference1.Product[] GetProductList(string category) {
            return base.Channel.GetProductList(category);
        }
        
        public System.Threading.Tasks.Task<WebApplication1.ServiceReference1.Product[]> GetProductListAsync(string category) {
            return base.Channel.GetProductListAsync(category);
        }
        
        public void AddScores(string score, string name) {
            base.Channel.AddScores(score, name);
        }
        
        public System.Threading.Tasks.Task AddScoresAsync(string score, string name) {
            return base.Channel.AddScoresAsync(score, name);
        }
        
        public bool CreateUser(string name, string password) {
            return base.Channel.CreateUser(name, password);
        }
        
        public System.Threading.Tasks.Task<bool> CreateUserAsync(string name, string password) {
            return base.Channel.CreateUserAsync(name, password);
        }
        
        public int CheckUser(string name, string password) {
            return base.Channel.CheckUser(name, password);
        }
        
        public System.Threading.Tasks.Task<int> CheckUserAsync(string name, string password) {
            return base.Channel.CheckUserAsync(name, password);
        }
    }
}
